#!/bin/bash
###############################################
####### some definitions for the script #######
###############################################

SUT_rcv_iface_name="enp6s0f0"
SUT_rcv_iface_ipv4_addr="10.10.1.2"
SUT_rcv_iface_ipv4_plen="24"
SUT_rcv_iface_ipv6_addr="12:1::2"
SUT_rcv_iface_ipv6_plen="64"
SUT_rcv_iface_mac="00:00:00:00:22:11"
SUT_rcv_iface_irq_min=76
SUT_rcv_iface_irq_max=92
SUT_rcv_iface_irq_core=8

SUT_snd_iface_name="enp6s0f1"
SUT_snd_iface_ipv4_addr="10.10.2.2"
SUT_snd_iface_ipv4_plen="24"
SUT_snd_iface_ipv6_addr="12:2::2"
SUT_snd_iface_ipv6_plen="64"
SUT_snd_iface_mac="00:00:00:00:22:22"
SUT_snd_iface_irq_min=94
SUT_snd_iface_irq_max=110
SUT_snd_iface_irq_core=8

TG_rcv_iface_mac_addr="00:00:00:00:11:22"
TG_rcv_iface_ipv4_addr="10.10.2.1"
TG_rcv_iface_ipv4_plen="24"
TG_rcv_iface_ipv6_addr="12:2::1"
TG_rcv_iface_ipv6_plen="64"

SUT_2nd_rt_name="rt2"
SUT_2nd_rt_num="100"

srext_oif_name="veth1"
srext_iif_name="veth2"
srext_oif_mac="00:00:00:00:00:AA"
srext_iif_mac="00:00:00:00:00:BB"

#Configure interfaces
ifconfig ${SUT_rcv_iface_name} up
ifconfig ${SUT_rcv_iface_name} hw ether ${SUT_rcv_iface_mac}
ip -6 addr add ${SUT_rcv_iface_ipv6_addr}/${SUT_rcv_iface_ipv6_plen} dev ${SUT_rcv_iface_name}

ifconfig ${SUT_snd_iface_name} up
ifconfig ${SUT_snd_iface_name} hw ether ${SUT_snd_iface_mac}
ip -6 addr add ${SUT_snd_iface_ipv6_addr}/${SUT_snd_iface_ipv6_plen} dev ${SUT_snd_iface_name}

#Enable forwarding
sysctl -w net.ipv4.conf.all.forwarding=1
sysctl -w net.ipv6.conf.all.forwarding=1
echo 1 > /proc/sys/net/ipv6/seg6_flowlabel

#Configure static ARP
arp -s ${TG_rcv_iface_ipv4_addr} ${TG_rcv_iface_mac_addr}

#Configure IPv6 neightbors
sudo ip -6 neigh add ${TG_rcv_iface_ipv6_addr} lladdr ${TG_rcv_iface_mac_addr}  dev ${SUT_snd_iface_name}

#Disable NIC Offloading features
ethtool -K ${SUT_rcv_iface_name} gro off
ethtool -K ${SUT_rcv_iface_name} gso off
ethtool -K ${SUT_rcv_iface_name} tso off
ethtool -K ${SUT_rcv_iface_name} lro off
ethtool -K ${SUT_rcv_iface_name} rx off tx off

ethtool -K ${SUT_snd_iface_name} gro off
ethtool -K ${SUT_snd_iface_name} gso off
ethtool -K ${SUT_snd_iface_name} tso off
ethtool -K ${SUT_snd_iface_name} lro off
ethtool -K ${SUT_snd_iface_name} rx off tx off

#SREXT
depmod -a
ip link add ${srext_oif_name} type veth peer name ${srext_iif_name}

ifconfig ${srext_oif_name} up
ifconfig ${srext_iif_name} up

ifconfig ${srext_oif_name} hw ether ${srext_oif_mac}
ifconfig ${srext_iif_name} hw ether ${srext_iif_mac}

# Create a secondary routing table
# echo $SUT_2nd_rt_num ${SUT_2nd_rt_name} >> /etc/iproute2/rt_tables

# Assign affinity of recieve queues
for (( c=$SUT_rcv_iface_irq_min; c<=$SUT_rcv_iface_irq_max; c++ ))
do
        sudo bash -c 'echo '${SUT_rcv_iface_irq_core}' > /proc/irq/'${c}'/smp_affinity'
done

for (( c=$SUT_snd_iface_irq_min; c<=$SUT_snd_iface_irq_max; c++ ))
do
        sudo bash -c 'echo '${SUT_snd_iface_irq_core}' > /proc/irq/'${c}'/smp_affinity'
done
