#!/bin/bash

###############################################
####### some definitions for the script #######
###############################################

VPP_rcv_iface_name="TenGigabitEthernet6/0/0"
VPP_rcv_iface_ipv4_addr="10.10.1.2"
VPP_rcv_iface_ipv4_plen="24"
VPP_rcv_iface_ipv6_addr="12:1::2"
VPP_rcv_iface_ipv6_plen="64"

VPP_snd_iface_name="TenGigabitEthernet6/0/1"
VPP_snd_iface_ipv4_addr="10.10.2.2"
VPP_snd_iface_ipv4_plen="24"
VPP_snd_iface_ipv6_addr="12:2::2"
VPP_snd_iface_ipv6_plen="64"

TG_rcv_iface_ipv4_addr="10.10.2.1"
TG_rcv_iface_ipv4_plen="24"
TG_rcv_iface_ipv6_addr="12:2::1"
TG_rcv_iface_ipv6_plen="64"

pkt_ipv6_dst_addr="B::2"
pkt_ipv6_dst_plen="64"

pkt_ipv4_dst_addr="48.0.0.0"
pkt_ipv4_dst_plen="24"

srv6_1st_sid="F1::"
srv6_2nd_sid="F2::"
srv6_srh2_sid="F3::"

rt_table_2="100"

srext_oif_name="veth1"
srext_iif_name="veth2"
srext_oif_mac="00:00:00:00:00:AA"
srext_iif_mac="00:00:00:00:00:BB"

declare -a behaviour_arr=(
			"ipv4"
			"ipv6"
			"t_encaps_v6"
			"t_encaps_v4"
			"t_encaps_l2"
			"t_insert_v6"
			"end"
			"end_x"
			"end_t"
			"end_b6"
			"end_b6_encaps"
			"end_dx6"
			"end_dx4"
			"end_dx2"
			"end_dt6"
			"end_ad6"
			"end_ad4"
			"end_am"
);

usage() {
echo ""
echo "+---------------------------------------------------------------+"
echo "+------------------+ SUT forwarding config +--------------------+"
echo "+---------------------------------------------------------------+"
echo "+-- This script configures the forwarding behaviour at SUT -----+"
echo "+-- It is used for the Linux SRv6 performance experiment      --+"
echo "+-- $ ./forwarding-behaviour.cfg BEHAVIOUR                    --+"
echo "+-- BEHAVIOUR: ipv4        | ipv6          | t_encaps_v6 |    --+"
echo "+--            t_encaps_v4 | t_encaps_l2   | t_insert_v6 |    --+"
echo "+--            end         | end_x         | end_t       |    --+"
echo "+--            end_b6      | end_b6_encaps | end_dx6     |    --+"
echo "+--            end_dx4     | end_dx2       | end_dt6     |    --+"
echo "+--            end_ad6     | end_ad4       | end_am           --+"
echo "+----------------------------------------------------------------+"
echo ""
exit
}

clean_ipv4_routes() {
vppctl ip route del $pkt_ipv4_dst_addr/$pkt_ipv4_dst_plen via $TG_rcv_iface_ipv4_addr $VPP_snd_iface_name
}

clean_ipv6_routes() {
vppctl ip route del $pkt_ipv6_dst_addr/$pkt_ipv6_dst_plen >> /tmp/clean-cfg.log 2>&1 >> /tmp/clean-cfg.log
vppctl ip route del $srv6_1st_sid/128 >> /tmp/clean-cfg.log 2>&1 >> /tmp/clean-cfg.log
vppctl ip route del $srv6_2nd_sid/128 >> /tmp/clean-cfg.log 2>&1 >> /tmp/clean-cfg.log
}

clean_srv6_sid() {
vppctl sr localsid del address $srv6_1st_sid  >> /tmp/clean-cfg.log 2>&1 >> /tmp/clean-cfg.log
vppctl sr localsid del address $srv6_2nd_sid  >> /tmp/clean-cfg.log 2>&1 >> /tmp/clean-cfg.log
}

clean_cfg(){
clean_ipv4_routes
clean_ipv6_routes
clean_srv6_sid
}

######## Plain forwarding ########

ipv4_cfg(){
vppctl ip route add $pkt_ipv4_dst_addr/$pkt_ipv4_dst_plen via $TG_rcv_iface_ipv4_addr $VPP_snd_iface_name
}

ipv6_cfg(){
vppctl ip route add $pkt_ipv6_dst_addr/$pkt_ipv6_dst_plen via $TG_rcv_iface_ipv6_addr $VPP_snd_iface_name
}

######## SR proxy behaviours - SRext ########

end_ad4_cfg(){
}

end_ad6_cfg(){
}

end_am_cfg(){
}

######## SRv6 Endpoint behaviours ########

end_cfg(){
vppctl sr localsid address $srv6_1st_sid behavior end
vppctl ip route add $srv6_2nd_sid/128 via $TG_rcv_iface_ipv6_addr $VPP_snd_iface_name
}

end_x_cfg(){
vppctl sr localsid address $srv6_1st_sid behavior end.x
}

end_t_cfg(){
}

end_b6_cfg(){
}

end_b6_encaps_cfg(){
}

######## SRv6 Endpoint with decap behaviours ########

end_dt6_cfg(){
}

end_dx2_cfg(){
}

end_dx4_cfg(){
}

end_dx6_cfg(){
}

######## SRv6 Transit behaviours ########

t_encaps_l2_cfg(){
}

t_encaps_v4_cfg(){
}

t_encaps_v6_cfg(){
}

t_insert_v6_cfg(){
}

###############################################
######### start of script execution ###########
###############################################

if [ $# -eq 0 ]
	then
	echo "ERROR: No specified behaviour! "
	echo "For the list of supported behaviour please try \"./$0 help\" "
	exit
fi

if [ $1 = "help" ]
	then
	usage
fi

if [ $1 = "clean" ]
        then
        clean_cfg
	exit
fi

if [ $# -gt 1 ]
	then
	echo "ERROR: too many parameters. please try \"$0 help\" "
	exit
fi

BEHAVIOUR=$1

for i in "${behaviour_arr[@]}"
do
	if [ "$i" = ${BEHAVIOUR} ] ; then
		clean_cfg
		${BEHAVIOUR}_cfg
		exit
	fi
done

echo "ERROR: behaviour \"${BEHAVIOUR}\" is not supported. please try \"$0 help\" "
